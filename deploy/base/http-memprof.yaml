# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Mixer Kubernetes Deployment config. (https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
# This is to be extended by the dev/autopush/staging/prod overlay.
# The deployment contains grpc mixer container and esp container that transcodes grpc to JSON.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mixer-grpc
  namespace: sinan
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Maximum number of pods that can be created over the desired number of pods.
      maxSurge: 1
      # Maximum number of pods that can be unavailable during the update process
      # Environment have different number of pods, this is roughly 8% in prod.
      maxUnavailable: 5
  selector:
    matchLabels:
      app: mixer-grpc
  template:
    metadata:
      labels:
        app: mixer-grpc
    spec:
      # This k8s service account binds to the GCP service account, and used
      # for GKE Workload Identity: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
      serviceAccountName: mixer-ksa
      volumes:
        - name: schema-mapping
          configMap:
            name: schema-mapping
        - name: memdb-config
          configMap:
            name: memdb-config
      containers:
        - name: mixer
          image: us-docker.pkg.dev/datcom-ci/mixer/server:http-pprof
          imagePullPolicy: Always
          resources:
            limits:
              memory: "8G"
            requests:
              memory: "8G"
          args:
            - --mixer_project=$(MIXER_PROJECT)
            - --store_project=$(STORE_PROJECT)
            - --bq_dataset=$(BIG_QUERY)
            - --import_group_tables=$(IMPORT_GROUP_TABLES)
            - --schema_path=/datacommons/mapping
            - --memdb_path=/datacommons/memdb
            - --httpprof_port=6060
          volumeMounts:
            - name: schema-mapping
              mountPath: /datacommons/mapping
            - name: memdb-config
              mountPath: /datacommons/memdb
          env:
            - name: MIXER_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: mixer-configmap
                  key: mixerProject
            - name: STORE_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: store.project
            - name: BIG_QUERY
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: bigquery.version
            - name: IMPORT_GROUP_TABLES
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: bigtable_import_groups.version
            - name: MIXER_HASH
              valueFrom:
                configMapKeyRef:
                  name: githash-configmap
                  key: mixer_hash.txt
            # A dummy config used to bounce the server without any docker image
            # or data config change.
            - name: BOUNCE
              value: "dummy"
          ports:
            - containerPort: 12345
              name: grpc
            - containerPort: 6060
              name: net-http-pprof # https://pkg.go.dev/net/http/pprof
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
            failureThreshold: 30

---

apiVersion: v1
kind: Service
metadata:
  name: memory-profiler-grpc
  namespace: sinan
spec:
  type: NodePort
  ports:
    - name: grpc
      port: 12345
      targetPort: 12345
      protocol: TCP
  selector:
    app: mixer-grpc

---

apiVersion: v1
kind: Service
metadata:
  name: memory-profiler-pprof
  namespace: sinan
spec:
  type: NodePort
  ports:
    - name: pprof
      port: 6060
      targetPort: 6060
      protocol: TCP
 selector:
    app: mixer-grpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: profile-mixer-memory
  namespace: sinan
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Maximum number of pods that can be created over the desired number of pods.
      maxSurge: 1
      # Maximum number of pods that can be unavailable during the update process
      # Environment have different number of pods, this is roughly 8% in prod.
      maxUnavailable: 5
  selector:
    matchLabels:
      app: profile-mixer-memory
  template:
    metadata:
      labels:
        app: profile-mixer-memory
    spec:
      # This k8s service account binds to the GCP service account, and used
      # for GKE Workload Identity: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
      serviceAccountName: mixer-ksa
      containers:
        - name: mixer
          image: us-docker.pkg.dev/datcom-ci/mixer/server:http-pprof
          imagePullPolicy: Always
          resources:
            limits:
              memory: "2G"
            requests:
              memory: "2G"
          # meant for manually running the go run ... command
          command: ["tail"]
          args: ["-f", "/dev/null"]
